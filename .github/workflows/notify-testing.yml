name: Notify testing repo on changes

on:
  push:
    branches: [ main ]     # adjust as needed
  workflow_dispatch:

permissions:
  contents: read

# jobs:
#   dispatch:
#     runs-on: ubuntu-latest
#     env:
#       OWNER: jmiguelcheq
#       TESTING_REPO: calculator-test-demo
#       CALC_URL: ${{ vars.CALC_URL || secrets.CALC_URL || 'https://jmiguelcheq.github.io/calculator-demo' }}
#     steps:
#       - name: Send repository_dispatch to Repo B
#         run: |
#           set -e
#           EVENT_TYPE="run-tests"
#           PAYLOAD=$(jq -n \
#             --arg sha "${GITHUB_SHA}" \
#             --arg ref "${GITHUB_REF_NAME}" \
#             --arg repo "${{ github.repository }}" \
#             --arg calc "${CALC_URL}" \
#             '{event_type:$ENV.EVENT_TYPE,
#               client_payload:{ sha:$sha, ref:$ref, source_repo:$repo, calc_url:$calc }}' \
#             --argjson ENV '{"EVENT_TYPE":"run-tests"}')

#           curl -sS -X POST \
#             -H "Authorization: Bearer ${{ secrets.DISPATCH_TOKEN }}" \
#             -H "Accept: application/vnd.github+json" \
#             https://api.github.com/repos/${OWNER}/${TESTING_REPO}/dispatches \
#             -d "$PAYLOAD"

jobs:
  dispatch:
    runs-on: ubuntu-latest

    env:
      OWNER: jmiguelcheq
      TESTING_REPO: calculator-test-demo
      CALC_URL: ${{ vars.CALC_URL || secrets.CALC_URL || 'https://jmiguelcheq.github.io/calculator-demo' }}

    steps:
      - name: Show context (debug)
        run: |
          echo "SHA=${GITHUB_SHA}"
          echo "REF=${GITHUB_REF_NAME}"
          echo "REPO=${{ github.repository }}"
          echo "CALC_URL=${CALC_URL}"

      - name: Send repository_dispatch to Repo B
        run: |
          set -euo pipefail

          # Build JSON with a hardcoded event_type string
          JSON=$(cat <<EOF
          {
            "event_type": "run-tests",
            "client_payload": {
              "sha": "${GITHUB_SHA}",
              "ref": "${GITHUB_REF_NAME}",
              "source_repo": "${{ github.repository }}",
              "calc_url": "${CALC_URL}"
            }
          }
          EOF
          )

          echo "Dispatch payload:"
          echo "${JSON}"

          # Call the API and capture HTTP status/response
          STATUS=$(curl -sS -o /tmp/resp.txt -w "%{http_code}" -X POST \
            -H "Authorization: Bearer ${{ secrets.DISPATCH_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/${OWNER}/${TESTING_REPO}/dispatches" \
            -d "${JSON}")

          echo "HTTP status: $STATUS"
          echo "Response body:"; cat /tmp/resp.txt || true

          if [ "$STATUS" != "204" ]; then
            echo "repository_dispatch failed"; exit 1
          fi

name: Notify Testing
on:
  workflow_dispatch:
    inputs:
      staging_url:
        description: "Staging preview URL"
        required: true
        type: string

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Show URL
        run: echo "Staging is ready at: ${{ github.event.inputs.staging_url }}"